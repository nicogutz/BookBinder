#define the base docker image file used for all jobs
image: composer:2.5
# Before we start any job, prepare the container with some extra configuration
# e.g. setting the ssh credentials, so we can later copy to shell.studev.groept.be
before_script:
    # create a local .ssh folder in the container
    - mkdir -p ~/.ssh
    # start the ssh-agent and add the private key to the system
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    # add the fingerprint for shell.studev.groept.be as a trusted host
    - ssh-keyscan shell.studev.groept.be > ~/.ssh/known_hosts
    # install rsync to copy files to the web server
    # this container runs Alpine Linux, where apk is the package manager (not apt-get)
    - apk add rsync
    # Every job will start a container with a clone from the current repo
    - docker-php-ext-install pdo pdo_mysql
    - apk add chromium chromium-chromedriver
    - export PANTHER_NO_SANDBOX=1

    
stages:
    - test
    - deploy

test-job:
    only:
        - master

    stage: test
    services:
        # a container with a temporary mysql db for running unit tests
        - mysql:8
    variables:
        # environment variables for configuring the mysql test database container
        MYSQL_DATABASE: main_test
        MYSQL_USER: user
        MYSQL_ROOT_PASSWORD: pass
        MYSQL_PASSWORD: pass
        PANTHER_APP_ENV: test
        # set the correct DSN in Symfony to connect to the temporary database
        DATABASE_URL: "mysql://root:pass@mysql/main"
    script:
        - composer install
        # run the migration on the temporary database
        - php bin/console debug:container --env-vars
        - php bin/console doctrine:migrations:migrate --env=test
        # load some test data in the temporary database
        - php bin/console --env=test doctrine:fixtures:load --append -n 
        # run the tests (using the temporary database)
        - php bin/phpunit


deploy-job:
    stage: deploy
    needs: 
        - test-job
    # run this job only when there is a push on the master branch
    only:
        - master
    variables:
        DATABASE_URL: "$SECRET_DATABASE_URL"
        APP_ENV: "prod"
    script:
        - composer install --no-dev
        # rsync is a copy/sync tool we use to copy the current folder ./ to studev
        # we ignore the .git folder and the .env file
        # we delete the files on the remote server that are not present in the local copy
        - rsync -rv --exclude=".git/"
                    --exclude="bundles"
                    --exclude=".env"
                    --exclude=".htaccess"
                    --exclude="config/packages/framework.yaml"
                    --delete
                    ./ a22web25@shell.studev.groept.be:/var/www/html
        - ssh -t a22web25@shell.studev.groept.be "cd /var/www/html; php bin/console doctrine:migrations:migrate; php bin/console cache:clear;"
