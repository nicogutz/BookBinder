#define the base docker image file used for all jobs
image: composer:2.5
default:
  artifacts:
    expire_in: 20min

# Before we start any job, prepare the container with some extra configuration
# e.g. setting the ssh credentials, so we can later copy to shell.studev.groept.be
before_script:
    # create a local .ssh folder in the container
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    # add the fingerprint for shell.studev.groept.be as a trusted host
    - ssh-keyscan shell.studev.groept.be > ~/.ssh/known_hosts
    # install rsync to copy files to the web server
    # this container runs Alpine Linux, where apk is the package manager (not apt-get)
    - apk add rsync
    # Every job will start a container with a clone from the current repo
    - docker-php-ext-install pdo pdo_mysql
    - apk add chromium chromium-chromedriver
    - export PANTHER_NO_SANDBOX=1

    
stages:
    - test
    - deploy

test-build:
    only:
        - master
    stage: test
    artifacts:
        paths:
            - vendor/
    script:
        - composer install

test-unit:
    stage: test
    needs:
        job: test-build
        artifacts: true
    script:
        - php bin/phpunit tests/Unit

test-integration:
    stage: test
    services:
        - mysql:8
    needs:
        job: test-build
        artifacts: true
    variables:
        MYSQL_DATABASE: main_test
        MYSQL_USER: user
        MYSQL_ROOT_PASSWORD: pass
        MYSQL_PASSWORD: pass
        PANTHER_APP_ENV: test
        DATABASE_URL: "mysql://root:pass@mysql/main"
    script:
        - php bin/console doctrine:migrations:migrate --env=test
        - php bin/console doctrine:fixtures:load --append -n --env=test --group=group1
        - php bin/phpunit tests/Integration

test-functional:
    stage: test
    services:
        - mysql:8
    needs:
        job: test-build
        artifacts: true
    variables:
        MYSQL_DATABASE: main_test
        MYSQL_USER: user
        MYSQL_ROOT_PASSWORD: pass
        MYSQL_PASSWORD: pass
        PANTHER_APP_ENV: test
        DATABASE_URL: "mysql://root:pass@mysql/main"
    script:
        - php bin/console doctrine:migrations:migrate --env=test
        - php bin/console doctrine:migrations:migrate prev --env=test
        - php bin/console doctrine:fixtures:load --append -n --env=test --group=group2
        - php bin/phpunit tests/Functional

deploy-job:
    stage: deploy
    needs: 
        - test-unit
        - test-integration
        - test-functional
    # run this job only when there is a push on the master branch
    only:
        - master
    variables:
        DATABASE_URL: "$SECRET_DATABASE_URL"
        APP_ENV: "prod"
    script:
        - composer install --no-dev --no-autoloader
        # rsync is a copy/sync tool we use to copy the current folder ./ to studev
        # we ignore the .git folder and the .env file
        # we delete the files on the remote server that are not present in the local copy
        - rsync -rv --exclude=".git/"
                    --exclude="bundles"
                    --exclude=".env"
                    --exclude=".htaccess"
                    --exclude="config/packages/framework.yaml"
                    --delete
                    ./ a22web25@shell.studev.groept.be:/var/www/html
        - ssh -t a22web25@shell.studev.groept.be "cd /var/www/html; php bin/console doctrine:migrations:migrate; php bin/console cache:clear;"
